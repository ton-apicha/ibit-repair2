/**
 * Status Badge Component
 * ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
 */

import { useTranslation } from 'react-i18next';

interface StatusBadgeProps {
  status: string;
  size?: 'sm' | 'md' | 'lg';
}

export default function StatusBadge({ status, size = 'md' }: StatusBadgeProps) {
  const { t } = useTranslation(['jobs']);
  
  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
  const getStatusConfig = (status: string) => {
    switch (status) {
      case 'RECEIVED':
        return {
          color: 'bg-blue-100 text-blue-800 border-blue-200',
          icon: 'üì•',
          label: t('jobs:status.RECEIVED'),
        };
      case 'DIAGNOSED':
        return {
          color: 'bg-purple-100 text-purple-800 border-purple-200',
          icon: 'üîç',
          label: t('jobs:status.DIAGNOSED'),
        };
      case 'WAITING_APPROVAL':
        return {
          color: 'bg-yellow-100 text-yellow-800 border-yellow-200',
          icon: '‚è≥',
          label: t('jobs:status.WAITING_APPROVAL'),
        };
      case 'IN_REPAIR':
        return {
          color: 'bg-orange-100 text-orange-800 border-orange-200',
          icon: 'üîß',
          label: t('jobs:status.IN_REPAIR'),
        };
      case 'WAITING_PARTS':
        return {
          color: 'bg-pink-100 text-pink-800 border-pink-200',
          icon: 'üì¶',
          label: t('jobs:status.WAITING_PARTS'),
        };
      case 'TESTING':
        return {
          color: 'bg-teal-100 text-teal-800 border-teal-200',
          icon: 'üß™',
          label: t('jobs:status.TESTING'),
        };
      case 'READY_FOR_PICKUP':
        return {
          color: 'bg-green-100 text-green-800 border-green-200',
          icon: '‚úÖ',
          label: t('jobs:status.READY_FOR_PICKUP'),
        };
      case 'COMPLETED':
        return {
          color: 'bg-green-600 text-white border-green-700',
          icon: 'üéâ',
          label: t('jobs:status.COMPLETED'),
        };
      case 'CANCELLED':
        return {
          color: 'bg-red-100 text-red-800 border-red-200',
          icon: '‚ùå',
          label: t('jobs:status.CANCELLED'),
        };
      case 'ON_HOLD':
        return {
          color: 'bg-gray-100 text-gray-800 border-gray-200',
          icon: '‚è∏Ô∏è',
          label: t('jobs:status.ON_HOLD'),
        };
      default:
        return {
          color: 'bg-gray-100 text-gray-800 border-gray-200',
          icon: '‚ùì',
          label: status,
        };
    }
  };

  const config = getStatusConfig(status);

  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î
  const sizeClasses = {
    sm: 'text-xs px-2 py-0.5',
    md: 'text-sm px-3 py-1',
    lg: 'text-base px-4 py-2',
  };

  return (
    <span
      className={`inline-flex items-center gap-1 font-medium rounded-full border ${config.color} ${sizeClasses[size]}`}
    >
      <span>{config.icon}</span>
      <span>{config.label}</span>
    </span>
  );
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏õ‡∏•‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô)
 */
export function getStatusLabel(status: string, language: string = 'th'): string {
  const config = {
    th: {
      RECEIVED: '‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß',
      DIAGNOSED: '‡∏ß‡∏¥‡∏ô‡∏¥‡∏à‡∏â‡∏±‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
      WAITING_APPROVAL: '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
      IN_REPAIR: '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡πà‡∏≠‡∏°',
      WAITING_PARTS: '‡∏£‡∏≠‡∏≠‡∏∞‡πÑ‡∏´‡∏•‡πà',
      TESTING: '‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      READY_FOR_PICKUP: '‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á‡∏°‡∏≠‡∏ö',
      COMPLETED: '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô',
      CANCELLED: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
      ON_HOLD: '‡∏û‡∏±‡∏Å‡πÑ‡∏ß‡πâ',
    },
    en: {
      RECEIVED: 'Received',
      DIAGNOSED: 'Diagnosed',
      WAITING_APPROVAL: 'Waiting Approval',
      IN_REPAIR: 'In Repair',
      WAITING_PARTS: 'Waiting Parts',
      TESTING: 'Testing',
      READY_FOR_PICKUP: 'Ready for Pickup',
      COMPLETED: 'Completed',
      CANCELLED: 'Cancelled',
      ON_HOLD: 'On Hold',
    },
    zh: {
      RECEIVED: 'Â∑≤Êé•Êî∂',
      DIAGNOSED: 'Â∑≤ËØäÊñ≠',
      WAITING_APPROVAL: 'Á≠âÂæÖÂÆ¢Êà∑ÊâπÂáÜ',
      IN_REPAIR: 'Áª¥‰øÆ‰∏≠',
      WAITING_PARTS: 'Á≠âÂæÖÈõ∂‰ª∂',
      TESTING: 'ÊµãËØï‰∏≠',
      READY_FOR_PICKUP: 'ÂáÜÂ§áÂèñË¥ß',
      COMPLETED: 'Â∑≤ÂÆåÊàê',
      CANCELLED: 'Â∑≤ÂèñÊ∂à',
      ON_HOLD: 'ÊöÇÂÅú',
    },
  };

  return config[language as keyof typeof config]?.[status as keyof typeof config.th] || status;
}

/**
 * ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡∏î‡∏∂‡∏á‡∏™‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö chart/graph)
 */
export function getStatusColor(status: string): string {
  const colors = {
    RECEIVED: '#3B82F6', // Blue
    DIAGNOSED: '#A855F7', // Purple
    WAITING_APPROVAL: '#F59E0B', // Yellow
    IN_REPAIR: '#F97316', // Orange
    WAITING_PARTS: '#EC4899', // Pink
    TESTING: '#14B8A6', // Teal
    READY_FOR_PICKUP: '#10B981', // Green
    COMPLETED: '#059669', // Dark Green
    CANCELLED: '#EF4444', // Red
    ON_HOLD: '#6B7280', // Gray
  };

  return colors[status as keyof typeof colors] || '#6B7280';
}


